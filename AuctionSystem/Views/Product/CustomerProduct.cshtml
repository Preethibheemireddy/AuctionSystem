@model Auction.Model.Message.ProductModel
@{
    ViewBag.Title = "CustomerProduct";
}

<body style="background-color:white; ">


    <div style="
        display:inline;
        position: absolute;
        top: 150px;
        left: 50px;
        width: auto;
        height: auto;
        margin: auto;">

        @Html.ValidationSummary(true, "Please correct the errors and try again.", new { @class = "text-danger" })

        @using (Html.BeginForm("UpdateCustomerProduct", "Product", FormMethod.Post))
        {


            <div style="font-size: large">
                <label style="color: black; font-size: large"> Product Name: </label>
                @Html.TextBoxFor(m => m.Product_Name, new { @class = "form-control" }) <br />
                @Html.ValidationMessageFor(m => m.Product_Name, "", new { @class = "text-danger" })
            </div>

            <div style="font-size: large">
                <label style="color: black; font-size: large"> Product Description: </label>
                @Html.TextBoxFor(m => m.Product_description, new { @class = "form-control" }) <br />
                @Html.ValidationMessageFor(m => m.Product_description, "", new { @class = "text-danger" })
            </div>
            <div style="font-size: large">
                <label style="color: black; font-size: large"> Product Bid Time: </label>
                @Html.TextBoxFor(m => m.Product_bid_time, new { @class = "form-control" }) <br />
                @Html.ValidationMessageFor(m => m.Product_bid_time, "", new { @class = "text-danger" })
            </div>

            <div style="font-size: large">
                <label style="color: black; font-size: large"> Product Bid Price: </label>
                @Html.DisplayFor(m => m.Product_bid_price, new { @class = "form-control" }) <br />
                @Html.HiddenFor(m => m.Product_bid_price)

            </div>

            <div style="font-size: large">
                <label style="color: black; font-size: large"> Max Price: </label>
                @Html.DisplayFor(m => m.Max_Price, new { @class = "form-control" }) <br />
                @Html.HiddenFor(m => m.Max_Price)

            </div>

            <div style="font-size: large">
                <label style="color: black; font-size: large"> Current Highest Bid: </label>
                @Html.DisplayFor(m => m.CurrentHighestBid, new { @class = "form-control" }) <br />
                @Html.HiddenFor(m => m.CurrentHighestBid)

            </div>
            <div style="font-size: large">
                <label style="color: black; font-size: large"> Status: </label>
                @Html.DisplayFor(m => m.Status, new { @class = "form-control" }) <br />
                @Html.HiddenFor(m => m.Status)

                @Html.HiddenFor(m => m.ProductType_Id)
                @Html.HiddenFor(m => m.ProductID)
            </div>

            if (Model.Status != "Active")
            {
                <input type="submit" value="Submit" style="color:white; background-color:gray; font-size: large" disabled="disabled"/>
            }
            else
            {
                <input type="submit" value="Submit" style="color:white; background-color:cornflowerblue; font-size: large"/>
            }
        }


    </div>
</body>




