@model Auction.Model.Message.Product
@{
    ViewBag.Title = "CustomerProduct";
}

<body style="background-color:white; ">

    <div style="
        display:inline;
        position: absolute;
        top: 150px;
        left: 50px;
        width: auto;
        height: auto;
        margin: auto;">

        @Html.ValidationSummary(true, "Errors occured", new { @class = "text-danger" })

        @using (Html.BeginForm("UpdateCustomerProduct", "Product", FormMethod.Post))
        {
            <div style="font-size: large">
                <label style="color: black; font-size: large"> Product Name: </label>
                @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control", @id = "productName", autocomplete = "off" }) <br />
                @Html.ValidationMessageFor(m => m.ProductName, "", new { @class = "text-danger" })
            </div>

            <div style="font-size: large">
                <label style="color: black; font-size: large"> Product Description: </label>
                @Html.TextBoxFor(m => m.ProductDescription, new { @class = "form-control", @id = "description", autocomplete = "off" }) <br />
                @Html.ValidationMessageFor(m => m.ProductDescription, "", new { @class = "text-danger" })
            </div>
            <div style="font-size: large">
                <label style="color: black; font-size: large"> Product Bid Time: </label>
                @Html.TextBoxFor(m => m.ProductBidTime, new { @class = "form-control", @id = "bidTime", autocomplete = "off" }) <br />
                @Html.ValidationMessageFor(m => m.ProductBidTime, "", new { @class = "text-danger" })
            </div>

            <div style="font-size: large">
                <label style="color: black; font-size: large"> Product Bid Price: </label>
                @Html.DisplayFor(m => m.ProductBidPrice, new { @class = "form-control" }) <br />
                @Html.HiddenFor(m => m.ProductBidPrice)

            </div>

            @*<div style="font-size: large">
                <label style="color: black; font-size: large"> Max Price: </label>
                @Html.DisplayFor(m => m.MaxPrice, new { @class = "form-control" }) <br />
                @Html.HiddenFor(m => m.MaxPrice)

            </div>*@

            <div style="font-size: large">
                <label style="color: black; font-size: large"> Current Highest Bid: </label>
                @Html.DisplayFor(m => m.CurrentHighestBid, new { @class = "form-control" }) <br />
                @Html.HiddenFor(m => m.CurrentHighestBid)

            </div>
            <div style="font-size: large">
                <label style="color: black; font-size: large"> Status: </label>
                @Html.DisplayFor(m => m.Status, new { @class = "form-control" }) <br />
                @Html.HiddenFor(m => m.Status)

                @Html.HiddenFor(m => m.ProductTypeId)
                @Html.HiddenFor(m => m.ProductId)
            </div>

            if (Model.Status != "Active")
            {
                <input type="submit" value="Submit" style="color:white; background-color:gray; font-size: large" disabled="disabled" />
            }
            else
            {
                <input id="updateProduct" type="submit" value="Submit" style="color:white; background-color:cornflowerblue; font-size: large" />
            }
        }

    </div>
</body>




